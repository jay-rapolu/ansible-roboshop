- name: setup shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: install maven and mysql
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: installed
    loop:
    - maven
    - mysql  

  - name: install PyMySQL and cryptography 
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - cryptography
    - PyMySQL
    
  - name: create system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      home: /app
      create_home: true
      system: true
      state: present

  - name: download the source code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

  - name: deploy the source code
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: build the package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: deploying the package
    ansible.builtin.command: mv /app/target/shipping-1.0.jar /app/shipping.jar

  - name: create service file for shipping
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
   
  - name: Reload systemd daemon
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: start and enable shipping
    ansible.builtin.service:
      name: shipping
      enabled: yes
      state: started

  - name: import data
    community.mysql.mysql_db:
      name: all
      login_user: root
      login_password: RoboShop@1
      state: import
      target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql
    - /app/db/master-data.sql

  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted