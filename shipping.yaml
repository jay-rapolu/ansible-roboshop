- name: shipping component setup
  hosts: shipping
  become: yes
  vars:
    ansible_user: ec2-user
    ansible_password: DevOps321
  tasks:
  - name: install java and maven
    ansible.builtin.dnf:
      name: maven
      state: present

  - name: create system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      home: /app
      system: true

  - name: download source code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

  - name: deploy source code
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: build the package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: deploying the artifact
    ansible.builtin.command: mv /app/target/shipping-1.0.jar /app/shipping.jar

  - name: create service file
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: reload the systemctl daemon-reload
    ansible.builtin.systemd_service:
      daemon-reload: true

  - name: start and enable shipping service
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes

  - name: install mysql client
    ansible.builtin.dnf:
      name: mysql
      state: present

  - name: install python dependencies
    ansible.builtin.pip:
      name: PyMySQL
      executable: pip3.9

  - name: importing data to mysql
    community.mysql.mysql_db:
      login_host: mysql.jayachandrarapolu.site
      login_password: RoboShop@1
      name: all
      state: import
      target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql
    - /app/db/master-data.sql

  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
